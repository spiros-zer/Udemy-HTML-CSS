/*

--- 01 TYPOGRAPHY SYSTEM

- Font Sizes (px):
10 / 12 / 14 / 16 / 18 / 20 / 24 / 30 / 36 / 44 / 52 / 62 / 74 / 86 / 98

- Font Weights

Default: 400
Medium: 500
Semi-bold: 600
Bold: 700

- Line Heights

Default: 1
Small: 1.05
Medium: 1.2
Paragraph Default: 1.6

- Letter Spacing

-0.5px
0.75px

--- 02 COLORS

- Primary: #e67e22 #51cf66
- Tints: #fdf2e9 #fae5d3 #eb984e
- Shades: #cf711f #45260a
- Accents:
- Greys: #333 #555 #6f6f6f (lightest grey allowd on #fdf2e9) #767676 (lightest grey allowd on #fff)#888

--- 05 SHADOWS

0 2.4rem 4.8rem rgba(0, 0, 0, 0.075);

--- 06 BORDER-RADIUS

Default: 9px
Medium: 1.1rem

--- 07 WHITESPACE

- Spacing System (px):
2 / 4 / 8 / 12 / 16 / 24 / 32 / 48 / 64 / 80 / 96 / 128

*/

* {
  padding: 0;
  margin: 0;
  box-sizing: border-box;
}

/*
Root element Font size:
Basically what we did here is we wanted to change the  the root element's font size to 10px in order to make the rem-to-pixel calculation easier. But if we set a hardcoded value like 10px then accessibility issues wiull occur (e.g. some user has increased browser font-size but our css will overwrite it). Thus, by using a percentage, the root element's font size will be a percentage of the size set by the user in their browser. The percentage is calculated as shown bellow.
*/
html {
  /*Percentage -> 10px / 16px = 0.625 = 62.5%*/
  /*Percentage of user's browser font-size setting*/

  font-size: 62.5%;
}

body {
  font-family: "Rubik", sans-serif;
  line-height: 1;
  font-weight: 400;
  color: #555;
}

/*******************************/
/* GENERAL REUSABLE COMPONENTS */
/*******************************/

/*At this point we want to create a reusable grid instead of writing grid again and again. We also want this grid to be customisable depending on the scenario, that's why we introduce the gird--x-cols if we want different amount of columns in which we set the columns and  not the .grid class*/
.grid {
  display: grid;
  row-gap: 9.6rem;
  column-gap: 6.4rem;
}

/*
We want a margin bottom to the grid for some visual hierarchy, BUT not when it is the last element in a container. There are 2 ways we can go about this:
1) add margin-bottom to the .grid and then make .grid:last-child where the margin is 0 if the the last child is grid
2) make .grid:not(:last-child) and add the margin-bottom in there which will basically apply the the margin to all grids that are NOT the last chilg of a container
*/

.grid:not(:last-child) {
  margin-bottom: 9.6rem;
}

.grid--2-cols {
  grid-template-columns: repeat(2, 1fr);
}

.grid--3-cols {
  grid-template-columns: repeat(3, 1fr);
}

.grid--4-cols {
  grid-template-columns: repeat(4, 1fr);
}

.grid--5-cols {
  grid-template-columns: repeat(5, 1fr);
}

.grid--center-v {
  align-items: center;
}

/*We again want to have a generic element to center our elements in page, and as with the generic grid above, we follow the same practice here*/
.container {
  /*1200px is a standard used in most cases. Also 1140px is another standard widely used*/
  max-width: 120rem;
  margin: 0 auto;
  padding: 0 3.2rem;
}

.heading-primary,
.heading-secondary,
.heading-tertiary {
  font-weight: 700;
  color: #333;
  /*Using px for very small distances*/
  letter-spacing: -0.5px;
}

.heading-primary {
  font-size: 5.2rem;
  line-height: 1.05;
  margin-bottom: 3.2rem;
}

.heading-secondary {
  font-size: 4.4rem;
  line-height: 1.2;
  margin-bottom: 9.6rem;
}

.subheading {
  display: block;
  font-size: 1.6rem;
  font-weight: 500;
  letter-spacing: 0.75px;
  color: #cf711f;
  text-transform: uppercase;
  margin-bottom: 1.6rem;
}

.heading-tertiary {
  font-size: 3rem;
  line-height: 1.2;
  margin-bottom: 3.2rem;
}

/*The way the button subclasses work is:
btn:link will be applied to buttons with href in them
btn:visited will be applied to button links that have been visited
btn:hover will be applied when cursr hovers over the btn element
btn:active will be applied when the btn is pressed

In case we have a btn with no href, the first 2 will not be applied thus the button will be not styled -> we add the plain btn class to the style*/
.btn,
.btn:link,
.btn:visited {
  display: inline-block;
  background-color: #e67e22;
  font-size: 2rem;
  font-weight: 600;
  padding: 1.6rem 3.2rem;
  text-decoration: none;
  border-radius: 9px;
  /*Animating color change of button from link to hevered*/
  transition: all 0.3s;
  /*These are ONLY necessary for the .btn class and not the .btn:link, visited*/
  border: none;
  cursor: pointer;
}

.btn--full:link,
.btn--full:visited {
  background-color: #e67e22;
  color: #fff;
}

.btn--full:hover,
.btn--full:active {
  background-color: #cf711f;
}

.btn--outline:link,
.btn--outline:visited {
  background-color: #fff;
  color: #555;
}

.btn--outline:hover,
.btn--outline:active {
  background-color: #fdf2e9;
  /*If we use border since the border is added on the outside of the button, the button seems to jump. That's why we dont't use the border/*/
  /* border: 3px solid #fff; */
  /*Trick to add boprder inside*/
  box-shadow: inset 0 0 0 3px #fff;
}

.btn--form {
  background-color: #45260a;
  color: #fdf2e9;
  align-self: end;
  padding: 1.2rem;
}

.btn--form:hover {
  background-color: #fff;
  color: #555;

}

.link:link,
.link:visited {
  color: #e67e22;
  text-decoration: none;
  /*If we want a prettier underlined link we use border and then padding since we will be able to control the distance between the text and the line*/
  border-bottom: 1px solid currentColor;
  padding-bottom: 0.2rem;
  transition: all 0.2s;
}

.link:hover,
.link:active {
  color: #e67e22;
  /*Instead of removing the border we set its color to transparent and that is because if we removed it the element would become smaller due to the removal of the 1px border and then it would have a bad noticeable effect*/
  border-bottom: 1px solid transparent;
}

.list {
  list-style: none;
  display: flex;
  flex-direction: column;
  gap: 1.6rem;
}

.list-item {
  display: flex;
  align-items: center;
  gap: 1.6rem;
  font-size: 1.8rem;
}

.list-icons {
  width: 3rem;
  height: 3rem;
  color: #e67e22;
}


/*Focus dictates which elemnt is selected currently. Focus is a state of different elements such as links, buttons*/
*:focus {
  outline: none;
  box-shadow: 0 0 0 0.8rem rgba(230, 125, 34, 0.5);
}

/*******************************/
/* HELPER/SETTINGS CLASSES */
/*******************************/

/*These can be seen as overwritting the general settings we have set earlier for some special scenarions*/

.margin-right-sm {
  margin-right: 1.6rem !important;
}

.margin-bottom-md {
  margin-bottom: 4.8rem !important;
}

.center-text {
  text-align: center;
}

strong {
  font-weight: 500;
}